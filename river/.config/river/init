#!/usr/bin/env sh
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

kanshi &

# Start systemd services and targets
systemctl --user start river-session.target

# Set river specific environment variables
#export XDG_SESSION_TYPE="wayland"
#export XDG_CURRENT_DESKTOP="river"

systemctl --user import-environment PATH WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
dbus-update-activation-environment --systemd PATH WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=river
systemctl --user restart xdg-desktop-portal

# startup


# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.

# QMK MEH is equal to control + shift + alt (right alt key)
# QMK HYPER is equal to control + shift + alt + super (right Windows key)

# Set programs that you use
menu=fuzzel
#$menuScriptDir = ~/.local/bin/menu-scripts

mainMod=Super # Sets Windows key as main modifier
hyperMod=Control+Shift+Alt+Super
# Super+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
riverctl map normal $mainMod Return spawn $TERMINAL
riverctl map normal $mainMod+Control Return spawn ghostty
riverctl map normal $mainMod Space spawn $menu
riverctl map normal $hyperMod Pause spawn $HOME/.local/bin/menu-scripts/powermenu.sh
riverctl map normal $hyperMod f spawn $HOME/.local/bin/menu-scripts/fuzzel-script-launcher.sh

# $mainMod+Q to close the focused view
riverctl map normal $hyperMod Q close

# $mainMod+J and $mainMod+K to focus the next/previous view in the layout stack
riverctl map normal $mainMod h focus-view left
riverctl map normal $mainMod j focus-view down
riverctl map normal $mainMod k focus-view up
riverctl map normal $mainMod l focus-view right
riverctl map normal $mainMod n focus-view next
riverctl map normal $mainMod p focus-view previous

# $mainMod+Shift+J and $mainMod+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal $mainMod+Shift H swap left
riverctl map normal $mainMod+Shift J swap down
riverctl map normal $mainMod+Shift K swap up
riverctl map normal $mainMod+Shift L swap right
riverctl map normal $mainMod+Shift N swap next
riverctl map normal $mainMod+Shift P swap previous

# $mainMod+Period and $mainMod+Comma to focus the next/previous output
riverctl map normal $mainMod Period focus-output next
riverctl map normal $mainMod Comma focus-output previous

# $mainMod+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal $mainMod+Shift Period send-to-output next
riverctl map normal $mainMod+Shift Comma send-to-output previous

# $mainMod+Return to bump the focused view to the top of the layout stack
#riverctl map normal $mainMod Return zoom

# $mainMod+H and $mainMod+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal $mainMod H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal $mainMod L send-layout-cmd rivertile "main-ratio +0.05"

# $mainMod+Shift+H and $mainMod+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal $mainMod+Alt H send-layout-cmd rivertile "main-count +1"
riverctl map normal $mainMod+Alt L send-layout-cmd rivertile "main-count -1"

# $hyprMod+Alt+{H,J,K,L} to move views
riverctl map normal $hyperMod H move left 100
riverctl map normal $hyperMod J move down 100
riverctl map normal $hyperMod K move up 100
riverctl map normal $hyperMod L move right 100

# $mainMod+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal $mainMod+Alt+Control H snap left
riverctl map normal $mainMod+Alt+Control J snap down
riverctl map normal $mainMod+Alt+Control K snap up
riverctl map normal $mainMod+Alt+Control L snap right

# $mainMod+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal $mainMod+Alt+Shift H resize horizontal -100
riverctl map normal $mainMod+Alt+Shift J resize vertical 100
riverctl map normal $mainMod+Alt+Shift K resize vertical -100
riverctl map normal $mainMod+Alt+Shift L resize horizontal 100

# $mainMod + Left Mouse Button to move views
riverctl map-pointer normal $mainMod BTN_LEFT move-view

# $mainMod + Right Mouse Button to resize views
riverctl map-pointer normal $mainMod BTN_RIGHT resize-view

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # $mainMod+[1-9] to focus tag [0-8]
    riverctl map normal $mainMod $i set-focused-tags $tags

    # $mainMod+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal $mainMod+Shift $i set-view-tags $tags

    # $mainMod+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal $mainMod+Control $i toggle-focused-tags $tags

    # $mainMod+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal $mainMod+Shift+Control $i toggle-view-tags $tags
done

# $mainMod+0 to focus all tags
# $mainMod+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal $mainMod 0 set-focused-tags $all_tags
riverctl map normal $mainMod+Shift 0 set-view-tags $all_tags

# $mainMod+Space to toggle float
riverctl map normal $hyperMod End toggle-float

# $mainMod+F to toggle fullscreen
riverctl map normal $hyperMod Home toggle-fullscreen

# $mainMod+{Up,Right,Down,Left} to change layout orientation
riverctl map normal $mainMod Up    send-layout-cmd rivertile "main-location top"
riverctl map normal $mainMod Right send-layout-cmd rivertile "main-location right"
riverctl map normal $mainMod Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal $mainMod Left  send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# $mainMod+F11 to enter passthrough mode
riverctl map normal $mainMod F11 enter-mode passthrough

# $mainMod+F11 to return to normal mode
riverctl map passthrough $mainMod F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'brightnessctl set +5%'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'
done

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x93a1a1
riverctl border-color-unfocused 0x586e75

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id 'float*' -title 'foo' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 6 -outer-padding 6 &
